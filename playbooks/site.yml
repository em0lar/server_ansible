---
- hosts: all
  tags: base
  roles:
    - n0emis.base
    - jnv.unattended-upgrades
    - oh-my-zsh
  handlers:
    - name: restart systemd-journald
      systemd:
        name: systemd-journald.service
        state: restarted
    - name: restart cron
      systemd:
        name: cron
        state: restarted
  tasks:
    - name: Set timezone to Europe/Berlin
      timezone:
        name: Europe/Berlin
      notify: restart cron

    - name: create ci user
      user:
        name: "ci"
        shell: "/bin/bash"
        state: present
      when: ci_user_enable

    - name: add authorized key of ci user
      authorized_key:
        user: "ci"
        manage_dir: yes
        key: "ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIGfB6HQy8CnGNlcZn1cpM25eZPTXNnYePeyQlSogieo8 droneci"
        state: present
        exclusive: yes
      when: ci_user_enable

    - name: create certificate-transfer user
      user:
        name: "certificate-transfer"
        shell: "/bin/bash"
        state: present
      when: certificate_transfer_user_enable

    - name: add authorized key of certificate-transfer user
      authorized_key:
        user: "certificate-transfer"
        manage_dir: yes
        key: "ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIOs9IzvFrr/sg4K/Vtr6eZ9RrkWx2ybO5JzSwg6dRzVQ certificate-transfer"
        state: present
        exclusive: yes
      when: certificate_transfer_user_enable

    - name: Change SystemMaxUse in systemd-journald
      replace:
        path: "/etc/systemd/journald.conf"
        regexp: "^#SystemMaxUse="
        replace: "SystemMaxUse=50M"
      notify: restart systemd-journald

# Web
- hosts: web_database
  tags: web,web_database
  roles:
    - geerlingguy.postgresql
    - undergreen.mongodb

- hosts: web_services
  tags: web,web_services
  roles:
    - thomas-maurice.gitea
    - matrix
    - geerlingguy.nodejs
    - codimd
    - wekan

- hosts: web_nginx
  tags: web,web_nginx
  roles:
    - php-fastcgi
    - nginx
    - nextcloud
    - static.labcode.de
    - labcode.de
    - em0lar.de
    - docs.opendatamap.net
    - bechilli.de
    - matrix-well-known

- hosts: web_reverseproxy
  tags: web,web_reverseproxy
  roles:
    - coredns-dynamicdns
    - traefik
    - traefik-services
    - traefik-certificate-exporter

# CI

- name: drone_ci
  tags: drone_ci
  hosts: drone_ci
  roles:
    - docker
    - drone-ci

# Mail

- name: mail
  tags: mail
  hosts: mail
  roles:
    - docker
#    - mail/hcloud-volume
    - mail/mailcow

# DNS
- name: DNS Server
  hosts: dns
  tags: dns
  roles:
    - cloudalchemy.coredns

# Pihole

- name: pihole
  tags: pihole
  hosts: pihole
  roles:
    - pihole

# Jitsi

- name: jitsi
  tags: jitsi
  hosts: jitsi
  roles:
    - docker
    - docker-traefik-reverseproxy
    - jitsi

# IAM
- hosts: iam
  tags: iam
  roles:
    - keycloak-postgres
    - freeradius
    - wifi_radius_manager
  tasks:
    - name: Change HTTP-Listener for proxy-usage
      replace:
        path: "{{ keycloak_config_dir }}/standalone.xml"
        regexp: '<http-listener name="default" socket-binding="http" redirect-socket="https" enable-http2="true"/>'
        replace: '<http-listener name="default" socket-binding="http" redirect-socket="proxy-https" enable-http2="true" proxy-address-forwarding="true"/>'
      notify: restart keycloak

    - name: Create socket binding for proxy-usage
      lineinfile:
        path: "{{ keycloak_config_dir }}/standalone.xml"
        insertafter: '<socket-binding name="https" port="\${jboss.https.port:8443}"\/>'
        regexp: '<socket-binding name="proxy-https" port="443"/>'
        line: '<socket-binding name="proxy-https" port="443"/>'
      notify: restart keycloak

    - name: Activate preview features
      copy:
        dest: "{{ keycloak_config_dir }}/profile.properties"
        content: |
          profile=preview
      notify: restart keycloak

# Wireguard
- hosts: wireguard
  tags: wireguard
  roles:
    - adamruzicka.wireguard

# DN42
- hosts: dn42
  roles:
    - n0emis.dn42
  handlers:
    - name: save iptables
      shell: iptables-save > /etc/iptables/rules.v4

    - name: save ip6tables
      shell: ip6tables-save > /etc/iptables/rules.v6
  tasks:
    - name: Install iptables-persistent
      apt:
        name: "iptables-persistent"
        state: present

    - name: Reject ipv4 packets from dn42 to private wireguard
      iptables:
        ip_version: ipv4
        chain: FORWARD
        in_interface: "dn42_+"
        out_interface: "wg-+"
        jump: REJECT
      notify: save iptables

    - name: Reject ipv6 packets from dn42 to private wireguard
      iptables:
        ip_version: ipv6
        chain: FORWARD
        in_interface: "dn42_+"
        out_interface: "wg-+"
        jump: REJECT
      notify: save ip6tables
  tags: dn42


# Backup-Relay

- hosts: backup_relay
  tags: backup_relay
  roles:
    - coredns-dynamicdns
    - borg-server
  handlers:
    - name: reload sshd service
      systemd:
        name: sshd.service
        state: reloaded
  tasks:
    - name: Change SSH-Port
      lineinfile:
        path: /etc/ssh/sshd_config
        regexp: '^#Port 22'
        line: 'Port 1880'
      notify: reload sshd service

# Backup
- hosts: all,!backup_relay
  tags: backup
  pre_tasks:
    - name: Upload private backup ssh keys
      copy:
        content: "{{ lookup('passwordstore', 'infra/host/{{ ansible_host }}/backup_ssh_key subkey=private') | b64decode }}\nWm"
        dest: "/root/.ssh/backup_ssh_key"
        mode: 0600
  roles:
    - borgbase.borgbackup
  tasks:
    - name: Check if repo is initialized
      command: "borgmatic list"
      register: borgmatic_list
      ignore_errors: yes

    - name: Initialize repo
      command: "borgmatic init --encryption repokey"
      when: "'FileNotFoundError' in borgmatic_list.stdout"
