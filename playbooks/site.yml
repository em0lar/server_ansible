---
- hosts: all
  gather_facts: yes

- hosts: all,!backuponly,!openwrt,!notbase
  tags: base
  roles:
    - n0emis.base
    - jnv.unattended-upgrades
    - em0lar.oh-my-zsh
  handlers:
    - name: restart systemd-journald
      systemd:
        name: systemd-journald.service
        state: restarted
  tasks:
    - name: create certificate-transfer user
      user:
        name: "certificate-transfer"
        shell: "/bin/bash"
        state: present
      when: certificate_transfer_user_enable

    - name: add authorized key of certificate-transfer user
      authorized_key:
        user: "certificate-transfer"
        manage_dir: yes
        key: "ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIOs9IzvFrr/sg4K/Vtr6eZ9RrkWx2ybO5JzSwg6dRzVQ certificate-transfer"
        state: present
        exclusive: yes
      when: certificate_transfer_user_enable

    - name: Change SystemMaxUse in systemd-journald
      replace:
        path: "/etc/systemd/journald.conf"
        regexp: "^#SystemMaxUse="
        replace: "SystemMaxUse=50M"
      notify: restart systemd-journald

# Web
- hosts: web_database
  tags: web,web_database
  roles:
    - geerlingguy.postgresql
    - undergreen.mongodb

- hosts: matrix
  tags: matrix
  roles:
    - matrix

- hosts: gitea
  tags: gitea
  roles:
    - thomas-maurice.gitea

- hosts: hedgedoc
  roles:
    - geerlingguy.nodejs
    - ocha.yarn
    - em0lar.hedgedoc
  tasks:
    - name: Upload saml cert
      copy:
        dest: "{{ hedgedoc_base_path + '/idp_cert.pem' }}"
        content: "{{ hedgedoc_saml_idp_cert }}"
    - name: Upload saml private key
      copy:
        src: "../files/hedgedoc/idp_key.pem"
        dest: "{{ hedgedoc_base_path + '/idp_key.pem' }}"
  tags: hedgedoc

- hosts: web_nginx
  tags: web,web_nginx
  pre_tasks:
    - name: download GPG Key from php repository (sury)
      apt_key:
        url: "https://packages.sury.org/php/apt.gpg"
        state: present

    - name: enable php repository (sury)
      apt_repository:
        repo: "deb https://packages.sury.org/php/ {{ ansible_distribution_release }} main"
        state: present
  roles:
    - geerlingguy.php
    - geerlingguy.composer
    - geerlingguy.nginx
    - nextcloud
    - docs.opendatamap.net
    - matrix-well-known
    - em0lar.firefly-iii
    - element-web
  tasks:
    - name: download em0lar.de from GitHub
      git:
        repo: "https://github.com/em0lar/em0lar.de.git"
        dest: "/var/www/em0lar.de/em0lar.de"

    - name: download static.labcode.de from Gitea
      git:
        repo: "https://git.labcode.dev/em0lar/static.labcode.de.git"
        dest: "/var/www/labcode.de/static.labcode.de"

    - name: download labcode.de from GitHub
      git:
        repo: "https://github.com/em0lar/labcode.de.git"
        dest: "/var/www/labcode.de/labcode.de"

    - name: download ask.e1mo.de repo from GitHub
      git:
        repo: "https://github.com/e1mo/ask.e1mo.de.git"
        dest: "/var/www/em0lar.de/tell.em0lar.de"
        version: "v2.0.3"
    - name: Template config for tell.em0lar.de
      template:
        src: "../files/tell.em0lar.de/config.php.j2"
        dest: "/var/www/em0lar.de/tell.em0lar.de/config.php"

- hosts: web_reverseproxy
  tags: web,web_reverseproxy
  roles:
    - powerdns-dynamicdns
    - em0lar.traefik
    - traefik-certificate-exporter

# Mail

- name: mail
  tags: mail
  hosts: mail
  roles:
    - docker
    - mail/mailcow

# DNS
- name: DNS Server
  hosts: dns
  tags: dns
  roles:
    - powerdns-bind-backend
    - powerdns.pdns

# Pihole
- name: pihole
  tags: pihole
  hosts: pihole
  roles:
    - pihole

# Jitsi
- name: jitsi
  tags: jitsi
  hosts: jitsi
  roles:
    - docker
    - jitsi
    - em0lar.traefik

- name: coturn
  tags: coturn
  hosts: coturn
  roles:
    - systemli.coturn

# IAM
- hosts: iam
  tags: iam
  roles:
    - mrlesmithjr.openldap
    - keycloak-postgres
    - freeradius
    - wifi_radius_manager
    - n0emis.louketo

# Wireguard
- hosts: wireguard_member
  tags: wireguard
  roles:
    - adamruzicka.wireguard
  tasks:
    - name: Create wireguard_peer config for main wireguard server
      set_fact:
        wireguard_peer:
          public_key: "{{ wireguard_server_public_key }}"
          allowed_ips: "{{ wireguard_server_address }}"

- hosts: wireguard
  tags: wireguard
  pre_tasks:
    - name: Create wireguard peers config with host items
      set_fact:
        wireguard_wg_server_peers: "{{ wireguard_wg_server_peers | combine({ 'server_' + hostvars[item].ansible_facts.fqdn: hostvars[item].wireguard_peer }) }}"
      when: "hostvars[item].ansible_facts.fqdn is defined and hostvars[item].ansible_facts.fqdn != ansible_fqdn"
      with_items: "{{ groups['wireguard_member'] }}"
  roles:
    - adamruzicka.wireguard

# DN42
- hosts: dn42
  roles:
    - n0emis.dn42
  handlers:
    - name: save iptables
      shell: iptables-save > /etc/iptables/rules.v4

    - name: save ip6tables
      shell: ip6tables-save > /etc/iptables/rules.v6
  tasks:
    - name: Install iptables-persistent
      apt:
        name: "iptables-persistent"
        state: present

    - name: Reject ipv4 packets from dn42 to private wireguard
      iptables:
        ip_version: ipv4
        chain: FORWARD
        in_interface: "dn42_+"
        destination: "10.151.0.0/16"
        jump: REJECT
      notify: save iptables

    - name: Reject ipv6 packets from dn42 to private wireguard
      iptables:
        ip_version: ipv6
        chain: FORWARD
        in_interface: "dn42_+"
        destination: "fd8f:d15b:9f40::/48"
        jump: REJECT
      notify: save ip6tables
  tags: dn42


# Backup-Relay

- hosts: backup_relay
  tags: backup_relay
  roles:
    - powerdns-dynamicdns
    - borg-server
  handlers:
    - name: reload sshd service
      systemd:
        name: sshd.service
        state: reloaded
  tasks:
    - name: Change SSH-Port
      lineinfile:
        path: /etc/ssh/sshd_config
        regexp: '^#Port 22'
        line: 'Port 1880'
      notify: reload sshd service

# Backup
- hosts: all,!backup_relay,!openwrt
  tags: backup
  gather_facts: yes
  pre_tasks:
    - name: Upload private backup ssh keys
      copy:
        content: "{{ lookup('passwordstore', 'infra/host/{{ ansible_host }}/backup_ssh_key subkey=private') | b64decode }}\nWm"
        dest: "/root/.ssh/backup_ssh_key"
        mode: 0600
  roles:
    - borgbase.borgbackup
  tasks:
    - name: Check if repo is initialized
      command: "borgmatic list"
      register: borgmatic_list
      ignore_errors: yes

    - name: Initialize repo
      command: "borgmatic init --encryption repokey"
      when: "'FileNotFoundError' in borgmatic_list.stdout"

- hosts: monitored
  become: yes
  roles:
    - fahrplandatengarten.icinga
  tags: icinga,monitoring
